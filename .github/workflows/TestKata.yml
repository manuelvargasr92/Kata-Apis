name: kata-Alejandro # Nombre del pipeline

on:
  push:
    branches:
      - main  # Se ejecuta el pipeline cuando hay cambios en la rama "main"

  workflow_dispatch:  # Permite ejecutar manualmente el workflow desde GitHub Actions

  schedule:
    - cron: "0 8 * * 1"  # Ejecuta el pipeline automáticamente cada lunes a las 08:00 AM UTC (ajusta según tu zona horaria)

jobs:
  run-api-tests:
    runs-on: ubuntu-latest  # Define el sistema operativo en el que se ejecutará el pipeline

    strategy:
      fail-fast: false  # Si una prueba falla, las demás siguen ejecutándose
      max-parallel: 3  # Permite ejecutar hasta 3 pruebas en paralelo
      matrix:
        test_class:
          - "org.bdb.kata.api.tests.GetApiTest"  # Prueba para método GET
          - "org.bdb.kata.api.tests.PostApiTest"  # Prueba para método POST
          - "org.bdb.kata.api.tests.PutApiTest"  # Prueba para método PUT
          - "org.bdb.kata.api.tests.DeleteApiTest"  # Prueba para método DELETE

    steps:
      - name: Checkout repository  # Descarga el código del repositorio
        uses: actions/checkout@v4

      - name: Set up Java 17 #Confirgura el emtorno con java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Verify Gradle Wrapper Permissions  # Asegura que el wrapper de Gradle tenga permisos de ejecución
        run: chmod +x gradlew

      - name: Clean and Build Project (without tests)  # Limpia y compila el proyecto sin ejecutar pruebas
        run: ./gradlew clean build -x test

      - name: Run Serenity BDD API Tests  # Ejecuta las pruebas de API con Serenity BDD
        run: ./gradlew clean test --tests ${{ matrix.test_class }}

      - name: Upload Serenity Reports  # Guarda los reportes de Serenity BDD como un artefacto en GitHub Actions
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: serenity-reports
          path: target/site/serenity/
